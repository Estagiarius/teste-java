<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.teacheragenda</groupId>
    <artifactId>teacher-agenda</artifactId>
    <version>1.0-SNAPSHOT</version>
    <name>TeacherAgenda</name>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>11</maven.compiler.source>
        <maven.compiler.target>11</maven.compiler.target>
        <javafx.version>17.0.1</javafx.version> <!-- Use a recent LTS version of JavaFX -->
        <spring.boot.version>2.6.3</spring.boot.version> <!-- Use a compatible Spring Boot version -->
        <controlsfx.version>11.1.2</controlsfx.version>
        <jgraphx.version>4.2.2</jgraphx.version> <!-- JGraphX version -->
        <ical4j.version>3.2.4</ical4j.version> <!-- iCal4j version -->
        <slf4j.version>1.7.32</slf4j.version> <!-- SLF4J version for iCal4j logging -->
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring.boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <!-- JavaFX -->
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-controls</artifactId>
            <version>${javafx.version}</version>
        </dependency>
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-fxml</artifactId>
            <version>${javafx.version}</version>
        </dependency>
        <dependency>
            <groupId>org.controlsfx</groupId>
            <artifactId>controlsfx</artifactId>
            <version>${controlsfx.version}</version>
        </dependency>
        <dependency>
            <groupId>com.mxgraph</groupId>
            <artifactId>jgraphx</artifactId>
            <version>${jgraphx.version}</version>
        </dependency>

        <!-- iCalendar Support -->
        <dependency>
            <groupId>org.mnode.ical4j</groupId>
            <artifactId>ical4j</artifactId>
            <version>${ical4j.version}</version>
        </dependency>
        <!-- iCal4j requires an SLF4J logging implementation -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-simple</artifactId>
            <version>${slf4j.version}</version>
            <scope>runtime</scope> <!-- Or use another binding like slf4j-log4j12 if Log4j is preferred -->
        </dependency>


        <!-- Spring Boot -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-mail</artifactId>
        </dependency>

        <!-- H2 Database -->
        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
            <scope>runtime</scope>
        </dependency>

        <!-- JavaMail API -->
        </dependency>
        <!-- The jakarta.mail dependency below is often brought in by spring-boot-starter-mail,
             but can be kept if a specific version is needed or if not using the starter.
             For Spring Boot 2.6.x, starter-mail brings jakarta.mail-1.6.7.
             If you explicitly add spring-boot-starter-mail, this explicit one might be redundant
             unless you need to override the version provided by the starter.
             Let's comment it out for now as spring-boot-starter-mail should handle it.
        <dependency>
            <groupId>com.sun.mail</groupId>
            <artifactId>jakarta.mail</artifactId>
            <version>1.6.7</version>
        </dependency>
        -->
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.8.1</version>
                <configuration>
                    <source>${maven.compiler.source}</source>
                    <target>${maven.compiler.target}</target>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.openjfx</groupId>
                <artifactId>javafx-maven-plugin</artifactId>
                <version>0.0.8</version> <!-- Check for the latest version -->
                <configuration>
                    <mainClass>com.teacheragenda.MainApp</mainClass>
                </configuration>
            </plugin>
            <plugin>
                 <groupId>org.springframework.boot</groupId>
                 <artifactId>spring-boot-maven-plugin</artifactId>
                 <version>${spring.boot.version}</version>
            </plugin>
        </plugins>
    </build>
</project>
